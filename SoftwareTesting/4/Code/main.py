class Multiply(object):
    '''
        Этот класс организует возможность перемножения двух заданных значений типа int (x и y).
        Их можно задать либо при создании объекта, либо обратившись к полям напрямую.
    '''

    x = None
    y = None
    
    def __init__(self, x:int = None, y:int = None):
        self.x = x
        self.y = y
    
    
    def do(self):
        '''
            Этот метод умножает значение 'x' на значение 'y'
            Результат: Результат перемножения переменых 'x' и 'y'
            Возвращаемый тип: int
        '''
    
        # Проверка на существование значений
        if((self.x is None) or (self.y is None)):
            raise ValueError("Пожалуйста, вначале укажите значения 'x' и 'y'")

        # Если одно из значений равно нулю, то и результат будет равен нулю
        if((self.x == 0) or (self.y == 0)):
            return 0
        
        result = 0
        # Запатентованная формула перемножения нескольких переменныйх типа int
        for i in range(self.y):
            result += self.x
        
        return result


class RectangleArea(object):
    '''
        Этот класс высчитывает площадь прямоугольника по заданным значениям (длины сторон) типа int (a и b).
        Их можно задать либо при создании объекта, либо обратившись к полям напрямую
    '''
    
    a = None
    b = None
    
    def __init__(self, a:int = None, b:int = None):
        self.a = a
        self.b = b
    
    def do(self):
        '''
           Этот метод высчитывает площадь прямоугольника по двум заданным значениям типа int (длинам сторон).
           Результат: Площадь прямоугольника
           Возвращаемый тип: int
        '''
        
        # Проверка на существование значений
        if((self.a is None) or (self.b is None)):
            raise ValueError("Пожалуйста, вначале укажите длины сторон 'a' и 'b'")
        
        # Проверка на правильность ввода значений
        if( (self.a < 0) or (self.b < 0) ):
            raise ValueError("Введены неверные данные! Длины сторон не могут быть отрицательными")
        elif ( (self.a == 0) or (self.b == 0) ):
            raise ValueError("Введены неверные данные! Длины сторон не могут иметь нулевую длину")
        
        # Производим математическое вычисление площади прямоугольника по заданным значениям
        patentedMultiply = Multiply(self.a, self.b)
        
        return patentedMultiply.do()